<h3>@Name's TaskList</h3>

@if (taskList.Count > 0)
{
    <div class="progress my-2">
        <div class="progress-bar" role="progressbar"
             style="width: @(percentageDone)%"
             aria-valuemin="0" aria-valuemax="100">@(percentageDone)%</div>
    </div>
}

<EditForm class="form-inline my-2" Model="@newTask" OnValidSubmit="AddTask">
    <InputText class="form-control mx-2" @bind-Value="newTask.Task" ></InputText>
    <button class="btn btn-outline-primary" type="submit">Add Task</button>
</EditForm>

<ul class="list-group">
    @foreach (var task in taskList)
    {

        @if (task.IsCompleted)
        {
            <li class="list-group-item list-group-item-secondary my-1"
                @onclick="(()=> { task.IsCompleted = !task.IsCompleted; })">
                <del>@task.Task</del>
            </li>
        }
        else
        {
            <li class="list-group-item list-group-item-success my-1"
                @onclick="(()=> { task.IsCompleted = !task.IsCompleted; })">                
                @task.Task
            </li>
        }
    }
</ul>

@code {

    public List<TaskModel> taskList = new List<TaskModel>();

    private TaskModel newTask = new TaskModel();

    [Parameter]
    public string Name { get; set; }

    private int percentageDone
    {
        get { return (taskList.Count(a => a.IsCompleted) * 100) / taskList.Count; }
    }

    private void AddTask()
    {
        if (string.IsNullOrEmpty(newTask.Task))
            return;

        taskList.Add(newTask);
        newTask = new TaskModel();
    }

}